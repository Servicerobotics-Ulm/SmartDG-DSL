/*
 * generated by Xtext 2.21.0
 */
grammar InternalDependency;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.system.dependency.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.system.dependency.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.system.dependency.services.DependencyGrammarAccess;

}
@parser::members {
	private DependencyGrammarAccess grammarAccess;

	public void setGrammarAccess(DependencyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSystemDependencyObjects
entryRuleSystemDependencyObjects
:
{ before(grammarAccess.getSystemDependencyObjectsRule()); }
	 ruleSystemDependencyObjects
{ after(grammarAccess.getSystemDependencyObjectsRule()); } 
	 EOF 
;

// Rule SystemDependencyObjects
ruleSystemDependencyObjects 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemDependencyObjectsAccess().getGroup()); }
		(rule__SystemDependencyObjects__Group__0)
		{ after(grammarAccess.getSystemDependencyObjectsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUserName
entryRuleUserName
:
{ before(grammarAccess.getUserNameRule()); }
	 ruleUserName
{ after(grammarAccess.getUserNameRule()); } 
	 EOF 
;

// Rule UserName
ruleUserName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserNameAccess().getGroup()); }
		(rule__UserName__Group__0)
		{ after(grammarAccess.getUserNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUserImport
entryRuleUserImport
:
{ before(grammarAccess.getUserImportRule()); }
	 ruleUserImport
{ after(grammarAccess.getUserImportRule()); } 
	 EOF 
;

// Rule UserImport
ruleUserImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserImportAccess().getGroup()); }
		(rule__UserImport__Group__0)
		{ after(grammarAccess.getUserImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAt
entryRuleAt
:
{ before(grammarAccess.getAtRule()); }
	 ruleAt
{ after(grammarAccess.getAtRule()); } 
	 EOF 
;

// Rule At
ruleAt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtAccess().getGroup()); }
		(rule__At__Group__0)
		{ after(grammarAccess.getAtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getGroup()); }
		(rule__Dependency__Group__0)
		{ after(grammarAccess.getDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGUI
entryRuleGUI
:
{ before(grammarAccess.getGUIRule()); }
	 ruleGUI
{ after(grammarAccess.getGUIRule()); } 
	 EOF 
;

// Rule GUI
ruleGUI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGUIAccess().getGroup()); }
		(rule__GUI__Group__0)
		{ after(grammarAccess.getGUIAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemDependencyObjects__Group__0__Impl
	rule__SystemDependencyObjects__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemDependencyObjectsAccess().getUsernameAssignment_0()); }
	(rule__SystemDependencyObjects__UsernameAssignment_0)
	{ after(grammarAccess.getSystemDependencyObjectsAccess().getUsernameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemDependencyObjects__Group__1__Impl
	rule__SystemDependencyObjects__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemDependencyObjectsAccess().getUserimportAssignment_1()); }
	(rule__SystemDependencyObjects__UserimportAssignment_1)
	{ after(grammarAccess.getSystemDependencyObjectsAccess().getUserimportAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemDependencyObjects__Group__2__Impl
	rule__SystemDependencyObjects__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemDependencyObjectsAccess().getAtAssignment_2()); }
	(rule__SystemDependencyObjects__AtAssignment_2)
	{ after(grammarAccess.getSystemDependencyObjectsAccess().getAtAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemDependencyObjects__Group__3__Impl
	rule__SystemDependencyObjects__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemDependencyObjectsAccess().getDependenciesAssignment_3()); }
	(rule__SystemDependencyObjects__DependenciesAssignment_3)*
	{ after(grammarAccess.getSystemDependencyObjectsAccess().getDependenciesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemDependencyObjects__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemDependencyObjectsAccess().getGuisAssignment_4()); }
	(rule__SystemDependencyObjects__GuisAssignment_4)*
	{ after(grammarAccess.getSystemDependencyObjectsAccess().getGuisAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserName__Group__0__Impl
	rule__UserName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserNameAccess().getUserNameKeyword_0()); }
	'UserName'
	{ after(grammarAccess.getUserNameAccess().getUserNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserName__Group__1__Impl
	rule__UserName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserNameAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getUserNameAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserNameAccess().getNameAssignment_2()); }
	(rule__UserName__NameAssignment_2)
	{ after(grammarAccess.getUserNameAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserImport__Group__0__Impl
	rule__UserImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getUserImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserImport__Group__1__Impl
	rule__UserImport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserImportAccess().getEnvironmentAssignment_1()); }
	(rule__UserImport__EnvironmentAssignment_1)
	{ after(grammarAccess.getUserImportAccess().getEnvironmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserImport__Group__2__Impl
	rule__UserImport__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserImportAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getUserImportAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserImport__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserImportAccess().getBoxpathAssignment_3()); }
	(rule__UserImport__BoxpathAssignment_3)
	{ after(grammarAccess.getUserImportAccess().getBoxpathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__At__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__At__Group__0__Impl
	rule__At__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__At__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtAccess().getSaveKeyword_0()); }
	'Save'
	{ after(grammarAccess.getAtAccess().getSaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__At__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__At__Group__1__Impl
	rule__At__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__At__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtAccess().getCommercialAtKeyword_1()); }
	'@'
	{ after(grammarAccess.getAtAccess().getCommercialAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__At__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__At__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__At__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtAccess().getNameAssignment_2()); }
	(rule__At__NameAssignment_2)
	{ after(grammarAccess.getAtAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__0__Impl
	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getDependencyKeyword_0()); }
	'Dependency'
	{ after(grammarAccess.getDependencyAccess().getDependencyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__1__Impl
	rule__Dependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getNameAssignment_1()); }
	(rule__Dependency__NameAssignment_1)
	{ after(grammarAccess.getDependencyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__2__Impl
	rule__Dependency__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getFnAssignment_2()); }
	(rule__Dependency__FnAssignment_2)
	{ after(grammarAccess.getDependencyAccess().getFnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__3__Impl
	rule__Dependency__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getDependencyAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__4__Impl
	rule__Dependency__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getFpAssignment_4()); }
	(rule__Dependency__FpAssignment_4)
	{ after(grammarAccess.getDependencyAccess().getFpAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__5__Impl
	rule__Dependency__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusKeyword_5()); }
	'--'
	{ after(grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__6__Impl
	rule__Dependency__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getOAssignment_6()); }
	(rule__Dependency__OAssignment_6)
	{ after(grammarAccess.getDependencyAccess().getOAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__7__Impl
	rule__Dependency__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_7()); }
	'-->'
	{ after(grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__8__Impl
	rule__Dependency__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getTnAssignment_8()); }
	(rule__Dependency__TnAssignment_8)
	{ after(grammarAccess.getDependencyAccess().getTnAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__9__Impl
	rule__Dependency__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getFullStopKeyword_9()); }
	'.'
	{ after(grammarAccess.getDependencyAccess().getFullStopKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getTpAssignment_10()); }
	(rule__Dependency__TpAssignment_10)
	{ after(grammarAccess.getDependencyAccess().getTpAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GUI__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUI__Group__0__Impl
	rule__GUI__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIAccess().getGUIKeyword_0()); }
	'GUI'
	{ after(grammarAccess.getGUIAccess().getGUIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUI__Group__1__Impl
	rule__GUI__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIAccess().getNameAssignment_1()); }
	(rule__GUI__NameAssignment_1)
	{ after(grammarAccess.getGUIAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUI__Group__2__Impl
	rule__GUI__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getGUIAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUI__Group__3__Impl
	rule__GUI__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIAccess().getXAssignment_3()); }
	(rule__GUI__XAssignment_3)
	{ after(grammarAccess.getGUIAccess().getXAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUI__Group__4__Impl
	rule__GUI__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getGUIAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUI__Group__5__Impl
	rule__GUI__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIAccess().getYAssignment_5()); }
	(rule__GUI__YAssignment_5)
	{ after(grammarAccess.getGUIAccess().getYAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUI__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getGUIAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDependencyObjects__UsernameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemDependencyObjectsAccess().getUsernameUserNameParserRuleCall_0_0()); }
		ruleUserName
		{ after(grammarAccess.getSystemDependencyObjectsAccess().getUsernameUserNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__UserimportAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemDependencyObjectsAccess().getUserimportUserImportParserRuleCall_1_0()); }
		ruleUserImport
		{ after(grammarAccess.getSystemDependencyObjectsAccess().getUserimportUserImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__AtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemDependencyObjectsAccess().getAtAtParserRuleCall_2_0()); }
		ruleAt
		{ after(grammarAccess.getSystemDependencyObjectsAccess().getAtAtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__DependenciesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemDependencyObjectsAccess().getDependenciesDependencyParserRuleCall_3_0()); }
		ruleDependency
		{ after(grammarAccess.getSystemDependencyObjectsAccess().getDependenciesDependencyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDependencyObjects__GuisAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemDependencyObjectsAccess().getGuisGUIParserRuleCall_4_0()); }
		ruleGUI
		{ after(grammarAccess.getSystemDependencyObjectsAccess().getGuisGUIParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserName__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserNameAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getUserNameAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__EnvironmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserImportAccess().getEnvironmentSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getUserImportAccess().getEnvironmentSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserImport__BoxpathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserImportAccess().getBoxpathSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getUserImportAccess().getBoxpathSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__At__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__FnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getFnSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getDependencyAccess().getFnSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__FpAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getFpSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getDependencyAccess().getFpSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__OAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getOSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getDependencyAccess().getOSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__TnAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getTnSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getDependencyAccess().getTnSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__TpAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getTpSTRINGTerminalRuleCall_10_0()); }
		RULE_STRING
		{ after(grammarAccess.getDependencyAccess().getTpSTRINGTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGUIAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGUIAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__XAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGUIAccess().getXINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getGUIAccess().getXINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUI__YAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGUIAccess().getYINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getGUIAccess().getYINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
