/*
 * generated by Xtext 2.21.0
 */
grammar InternalDependency;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.system.dependency.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.system.dependency.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.system.dependency.services.DependencyGrammarAccess;

}

@parser::members {

 	private DependencyGrammarAccess grammarAccess;

    public InternalDependencyParser(TokenStream input, DependencyGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SystemDependencyObjects";
   	}

   	@Override
   	protected DependencyGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSystemDependencyObjects
entryRuleSystemDependencyObjects returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemDependencyObjectsRule()); }
	iv_ruleSystemDependencyObjects=ruleSystemDependencyObjects
	{ $current=$iv_ruleSystemDependencyObjects.current; }
	EOF;

// Rule SystemDependencyObjects
ruleSystemDependencyObjects returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDependencyObjectsAccess().getUsernameUserNameParserRuleCall_0_0());
				}
				lv_username_0_0=ruleUserName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDependencyObjectsRule());
					}
					set(
						$current,
						"username",
						lv_username_0_0,
						"org.xtext.system.dependency.Dependency.UserName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDependencyObjectsAccess().getUserimportUserImportParserRuleCall_1_0());
				}
				lv_userimport_1_0=ruleUserImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDependencyObjectsRule());
					}
					set(
						$current,
						"userimport",
						lv_userimport_1_0,
						"org.xtext.system.dependency.Dependency.UserImport");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDependencyObjectsAccess().getAtAtParserRuleCall_2_0());
				}
				lv_at_2_0=ruleAt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDependencyObjectsRule());
					}
					set(
						$current,
						"at",
						lv_at_2_0,
						"org.xtext.system.dependency.Dependency.At");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDependencyObjectsAccess().getDependenciesDependencyParserRuleCall_3_0());
				}
				lv_dependencies_3_0=ruleDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDependencyObjectsRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_3_0,
						"org.xtext.system.dependency.Dependency.Dependency");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDependencyObjectsAccess().getGuisGUIParserRuleCall_4_0());
				}
				lv_guis_4_0=ruleGUI
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDependencyObjectsRule());
					}
					add(
						$current,
						"guis",
						lv_guis_4_0,
						"org.xtext.system.dependency.Dependency.GUI");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleUserName
entryRuleUserName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserNameRule()); }
	iv_ruleUserName=ruleUserName
	{ $current=$iv_ruleUserName.current; }
	EOF;

// Rule UserName
ruleUserName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UserName'
		{
			newLeafNode(otherlv_0, grammarAccess.getUserNameAccess().getUserNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getUserNameAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getUserNameAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleUserImport
entryRuleUserImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserImportRule()); }
	iv_ruleUserImport=ruleUserImport
	{ $current=$iv_ruleUserImport.current; }
	EOF;

// Rule UserImport
ruleUserImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getUserImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_environment_1_0=RULE_STRING
				{
					newLeafNode(lv_environment_1_0, grammarAccess.getUserImportAccess().getEnvironmentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserImportRule());
					}
					setWithLastConsumed(
						$current,
						"environment",
						lv_environment_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getUserImportAccess().getFromKeyword_2());
		}
		(
			(
				lv_boxpath_3_0=RULE_STRING
				{
					newLeafNode(lv_boxpath_3_0, grammarAccess.getUserImportAccess().getBoxpathSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserImportRule());
					}
					setWithLastConsumed(
						$current,
						"boxpath",
						lv_boxpath_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAt
entryRuleAt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtRule()); }
	iv_ruleAt=ruleAt
	{ $current=$iv_ruleAt.current; }
	EOF;

// Rule At
ruleAt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Save'
		{
			newLeafNode(otherlv_0, grammarAccess.getAtAccess().getSaveKeyword_0());
		}
		otherlv_1='@'
		{
			newLeafNode(otherlv_1, grammarAccess.getAtAccess().getCommercialAtKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAtAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	iv_ruleDependency=ruleDependency
	{ $current=$iv_ruleDependency.current; }
	EOF;

// Rule Dependency
ruleDependency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Dependency'
		{
			newLeafNode(otherlv_0, grammarAccess.getDependencyAccess().getDependencyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_fn_2_0=RULE_STRING
				{
					newLeafNode(lv_fn_2_0, grammarAccess.getDependencyAccess().getFnSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
					setWithLastConsumed(
						$current,
						"fn",
						lv_fn_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getDependencyAccess().getFullStopKeyword_3());
		}
		(
			(
				lv_fp_4_0=RULE_STRING
				{
					newLeafNode(lv_fp_4_0, grammarAccess.getDependencyAccess().getFpSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
					setWithLastConsumed(
						$current,
						"fp",
						lv_fp_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='--'
		{
			newLeafNode(otherlv_5, grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusKeyword_5());
		}
		(
			(
				lv_o_6_0=RULE_STRING
				{
					newLeafNode(lv_o_6_0, grammarAccess.getDependencyAccess().getOSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
					setWithLastConsumed(
						$current,
						"o",
						lv_o_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='-->'
		{
			newLeafNode(otherlv_7, grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_7());
		}
		(
			(
				lv_tn_8_0=RULE_STRING
				{
					newLeafNode(lv_tn_8_0, grammarAccess.getDependencyAccess().getTnSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
					setWithLastConsumed(
						$current,
						"tn",
						lv_tn_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='.'
		{
			newLeafNode(otherlv_9, grammarAccess.getDependencyAccess().getFullStopKeyword_9());
		}
		(
			(
				lv_tp_10_0=RULE_STRING
				{
					newLeafNode(lv_tp_10_0, grammarAccess.getDependencyAccess().getTpSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
					setWithLastConsumed(
						$current,
						"tp",
						lv_tp_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGUI
entryRuleGUI returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGUIRule()); }
	iv_ruleGUI=ruleGUI
	{ $current=$iv_ruleGUI.current; }
	EOF;

// Rule GUI
ruleGUI returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GUI'
		{
			newLeafNode(otherlv_0, grammarAccess.getGUIAccess().getGUIKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGUIAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGUIRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getGUIAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_x_3_0=RULE_INT
				{
					newLeafNode(lv_x_3_0, grammarAccess.getGUIAccess().getXINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGUIRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getGUIAccess().getCommaKeyword_4());
		}
		(
			(
				lv_y_5_0=RULE_INT
				{
					newLeafNode(lv_y_5_0, grammarAccess.getGUIAccess().getYINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGUIRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getGUIAccess().getRightParenthesisKeyword_6());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
