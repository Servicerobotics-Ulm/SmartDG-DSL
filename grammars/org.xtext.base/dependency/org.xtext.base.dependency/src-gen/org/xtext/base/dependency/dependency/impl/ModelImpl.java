/**
 * generated by Xtext 2.23.0
 */
package org.xtext.base.dependency.dependency.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.base.dependency.dependency.ComponentDevelopment;
import org.xtext.base.dependency.dependency.DependencyPackage;
import org.xtext.base.dependency.dependency.Environment;
import org.xtext.base.dependency.dependency.Model;
import org.xtext.base.dependency.dependency.New;
import org.xtext.base.dependency.dependency.SystemProject;
import org.xtext.base.dependency.dependency.UserImport;
import org.xtext.base.dependency.dependency.UserName;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ModelImpl#getUsername <em>Username</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ModelImpl#getUserimport <em>Userimport</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ModelImpl#getNew <em>New</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ModelImpl#getEnvironments <em>Environments</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ModelImpl#getSystemProjects <em>System Projects</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ModelImpl#getComponentDevelopments <em>Component Developments</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getUsername() <em>Username</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUsername()
   * @generated
   * @ordered
   */
  protected EList<UserName> username;

  /**
   * The cached value of the '{@link #getUserimport() <em>Userimport</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUserimport()
   * @generated
   * @ordered
   */
  protected EList<UserImport> userimport;

  /**
   * The cached value of the '{@link #getNew() <em>New</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNew()
   * @generated
   * @ordered
   */
  protected EList<New> new_;

  /**
   * The cached value of the '{@link #getEnvironments() <em>Environments</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnvironments()
   * @generated
   * @ordered
   */
  protected EList<Environment> environments;

  /**
   * The cached value of the '{@link #getSystemProjects() <em>System Projects</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSystemProjects()
   * @generated
   * @ordered
   */
  protected EList<SystemProject> systemProjects;

  /**
   * The cached value of the '{@link #getComponentDevelopments() <em>Component Developments</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponentDevelopments()
   * @generated
   * @ordered
   */
  protected EList<ComponentDevelopment> componentDevelopments;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DependencyPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UserName> getUsername()
  {
    if (username == null)
    {
      username = new EObjectContainmentEList<UserName>(UserName.class, this, DependencyPackage.MODEL__USERNAME);
    }
    return username;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UserImport> getUserimport()
  {
    if (userimport == null)
    {
      userimport = new EObjectContainmentEList<UserImport>(UserImport.class, this, DependencyPackage.MODEL__USERIMPORT);
    }
    return userimport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<New> getNew()
  {
    if (new_ == null)
    {
      new_ = new EObjectContainmentEList<New>(New.class, this, DependencyPackage.MODEL__NEW);
    }
    return new_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Environment> getEnvironments()
  {
    if (environments == null)
    {
      environments = new EObjectContainmentEList<Environment>(Environment.class, this, DependencyPackage.MODEL__ENVIRONMENTS);
    }
    return environments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SystemProject> getSystemProjects()
  {
    if (systemProjects == null)
    {
      systemProjects = new EObjectContainmentEList<SystemProject>(SystemProject.class, this, DependencyPackage.MODEL__SYSTEM_PROJECTS);
    }
    return systemProjects;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentDevelopment> getComponentDevelopments()
  {
    if (componentDevelopments == null)
    {
      componentDevelopments = new EObjectContainmentEList<ComponentDevelopment>(ComponentDevelopment.class, this, DependencyPackage.MODEL__COMPONENT_DEVELOPMENTS);
    }
    return componentDevelopments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DependencyPackage.MODEL__USERNAME:
        return ((InternalEList<?>)getUsername()).basicRemove(otherEnd, msgs);
      case DependencyPackage.MODEL__USERIMPORT:
        return ((InternalEList<?>)getUserimport()).basicRemove(otherEnd, msgs);
      case DependencyPackage.MODEL__NEW:
        return ((InternalEList<?>)getNew()).basicRemove(otherEnd, msgs);
      case DependencyPackage.MODEL__ENVIRONMENTS:
        return ((InternalEList<?>)getEnvironments()).basicRemove(otherEnd, msgs);
      case DependencyPackage.MODEL__SYSTEM_PROJECTS:
        return ((InternalEList<?>)getSystemProjects()).basicRemove(otherEnd, msgs);
      case DependencyPackage.MODEL__COMPONENT_DEVELOPMENTS:
        return ((InternalEList<?>)getComponentDevelopments()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DependencyPackage.MODEL__USERNAME:
        return getUsername();
      case DependencyPackage.MODEL__USERIMPORT:
        return getUserimport();
      case DependencyPackage.MODEL__NEW:
        return getNew();
      case DependencyPackage.MODEL__ENVIRONMENTS:
        return getEnvironments();
      case DependencyPackage.MODEL__SYSTEM_PROJECTS:
        return getSystemProjects();
      case DependencyPackage.MODEL__COMPONENT_DEVELOPMENTS:
        return getComponentDevelopments();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DependencyPackage.MODEL__USERNAME:
        getUsername().clear();
        getUsername().addAll((Collection<? extends UserName>)newValue);
        return;
      case DependencyPackage.MODEL__USERIMPORT:
        getUserimport().clear();
        getUserimport().addAll((Collection<? extends UserImport>)newValue);
        return;
      case DependencyPackage.MODEL__NEW:
        getNew().clear();
        getNew().addAll((Collection<? extends New>)newValue);
        return;
      case DependencyPackage.MODEL__ENVIRONMENTS:
        getEnvironments().clear();
        getEnvironments().addAll((Collection<? extends Environment>)newValue);
        return;
      case DependencyPackage.MODEL__SYSTEM_PROJECTS:
        getSystemProjects().clear();
        getSystemProjects().addAll((Collection<? extends SystemProject>)newValue);
        return;
      case DependencyPackage.MODEL__COMPONENT_DEVELOPMENTS:
        getComponentDevelopments().clear();
        getComponentDevelopments().addAll((Collection<? extends ComponentDevelopment>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.MODEL__USERNAME:
        getUsername().clear();
        return;
      case DependencyPackage.MODEL__USERIMPORT:
        getUserimport().clear();
        return;
      case DependencyPackage.MODEL__NEW:
        getNew().clear();
        return;
      case DependencyPackage.MODEL__ENVIRONMENTS:
        getEnvironments().clear();
        return;
      case DependencyPackage.MODEL__SYSTEM_PROJECTS:
        getSystemProjects().clear();
        return;
      case DependencyPackage.MODEL__COMPONENT_DEVELOPMENTS:
        getComponentDevelopments().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.MODEL__USERNAME:
        return username != null && !username.isEmpty();
      case DependencyPackage.MODEL__USERIMPORT:
        return userimport != null && !userimport.isEmpty();
      case DependencyPackage.MODEL__NEW:
        return new_ != null && !new_.isEmpty();
      case DependencyPackage.MODEL__ENVIRONMENTS:
        return environments != null && !environments.isEmpty();
      case DependencyPackage.MODEL__SYSTEM_PROJECTS:
        return systemProjects != null && !systemProjects.isEmpty();
      case DependencyPackage.MODEL__COMPONENT_DEVELOPMENTS:
        return componentDevelopments != null && !componentDevelopments.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
