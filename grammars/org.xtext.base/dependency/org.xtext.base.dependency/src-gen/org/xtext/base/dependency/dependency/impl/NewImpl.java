/**
 * generated by Xtext 2.23.0
 */
package org.xtext.base.dependency.dependency.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.base.dependency.dependency.At;
import org.xtext.base.dependency.dependency.DependencyComponent;
import org.xtext.base.dependency.dependency.DependencyConnectors;
import org.xtext.base.dependency.dependency.DependencyObject;
import org.xtext.base.dependency.dependency.DependencyPackage;
import org.xtext.base.dependency.dependency.New;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>New</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.NewImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.NewImpl#getObject <em>Object</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.NewImpl#getComponent <em>Component</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.NewImpl#getConnector <em>Connector</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.NewImpl#getLocation <em>Location</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NewImpl extends MinimalEObjectImpl.Container implements New
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getObject() <em>Object</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObject()
   * @generated
   * @ordered
   */
  protected EList<DependencyObject> object;

  /**
   * The cached value of the '{@link #getComponent() <em>Component</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponent()
   * @generated
   * @ordered
   */
  protected EList<DependencyComponent> component;

  /**
   * The cached value of the '{@link #getConnector() <em>Connector</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnector()
   * @generated
   * @ordered
   */
  protected EList<DependencyConnectors> connector;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected At location;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NewImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DependencyPackage.Literals.NEW;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.NEW__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DependencyObject> getObject()
  {
    if (object == null)
    {
      object = new EObjectContainmentEList<DependencyObject>(DependencyObject.class, this, DependencyPackage.NEW__OBJECT);
    }
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DependencyComponent> getComponent()
  {
    if (component == null)
    {
      component = new EObjectContainmentEList<DependencyComponent>(DependencyComponent.class, this, DependencyPackage.NEW__COMPONENT);
    }
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DependencyConnectors> getConnector()
  {
    if (connector == null)
    {
      connector = new EObjectContainmentEList<DependencyConnectors>(DependencyConnectors.class, this, DependencyPackage.NEW__CONNECTOR);
    }
    return connector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public At getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLocation(At newLocation, NotificationChain msgs)
  {
    At oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DependencyPackage.NEW__LOCATION, oldLocation, newLocation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocation(At newLocation)
  {
    if (newLocation != location)
    {
      NotificationChain msgs = null;
      if (location != null)
        msgs = ((InternalEObject)location).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DependencyPackage.NEW__LOCATION, null, msgs);
      if (newLocation != null)
        msgs = ((InternalEObject)newLocation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DependencyPackage.NEW__LOCATION, null, msgs);
      msgs = basicSetLocation(newLocation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.NEW__LOCATION, newLocation, newLocation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DependencyPackage.NEW__OBJECT:
        return ((InternalEList<?>)getObject()).basicRemove(otherEnd, msgs);
      case DependencyPackage.NEW__COMPONENT:
        return ((InternalEList<?>)getComponent()).basicRemove(otherEnd, msgs);
      case DependencyPackage.NEW__CONNECTOR:
        return ((InternalEList<?>)getConnector()).basicRemove(otherEnd, msgs);
      case DependencyPackage.NEW__LOCATION:
        return basicSetLocation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DependencyPackage.NEW__NAME:
        return getName();
      case DependencyPackage.NEW__OBJECT:
        return getObject();
      case DependencyPackage.NEW__COMPONENT:
        return getComponent();
      case DependencyPackage.NEW__CONNECTOR:
        return getConnector();
      case DependencyPackage.NEW__LOCATION:
        return getLocation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DependencyPackage.NEW__NAME:
        setName((String)newValue);
        return;
      case DependencyPackage.NEW__OBJECT:
        getObject().clear();
        getObject().addAll((Collection<? extends DependencyObject>)newValue);
        return;
      case DependencyPackage.NEW__COMPONENT:
        getComponent().clear();
        getComponent().addAll((Collection<? extends DependencyComponent>)newValue);
        return;
      case DependencyPackage.NEW__CONNECTOR:
        getConnector().clear();
        getConnector().addAll((Collection<? extends DependencyConnectors>)newValue);
        return;
      case DependencyPackage.NEW__LOCATION:
        setLocation((At)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.NEW__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DependencyPackage.NEW__OBJECT:
        getObject().clear();
        return;
      case DependencyPackage.NEW__COMPONENT:
        getComponent().clear();
        return;
      case DependencyPackage.NEW__CONNECTOR:
        getConnector().clear();
        return;
      case DependencyPackage.NEW__LOCATION:
        setLocation((At)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.NEW__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DependencyPackage.NEW__OBJECT:
        return object != null && !object.isEmpty();
      case DependencyPackage.NEW__COMPONENT:
        return component != null && !component.isEmpty();
      case DependencyPackage.NEW__CONNECTOR:
        return connector != null && !connector.isEmpty();
      case DependencyPackage.NEW__LOCATION:
        return location != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //NewImpl
