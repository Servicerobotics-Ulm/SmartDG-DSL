/**
 * generated by Xtext 2.21.0
 */
package org.xtext.base.dependency.dependency.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.base.dependency.dependency.BoxLocation;
import org.xtext.base.dependency.dependency.ComponentDevelopment;
import org.xtext.base.dependency.dependency.DependencyPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component Development</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ComponentDevelopmentImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ComponentDevelopmentImpl#getWiki <em>Wiki</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ComponentDevelopmentImpl#getEnvironment <em>Environment</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ComponentDevelopmentImpl#getBoxpath <em>Boxpath</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ComponentDevelopmentImpl#getComponent <em>Component</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.ComponentDevelopmentImpl#getLocation <em>Location</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentDevelopmentImpl extends MinimalEObjectImpl.Container implements ComponentDevelopment
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getWiki() <em>Wiki</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWiki()
   * @generated
   * @ordered
   */
  protected static final String WIKI_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWiki() <em>Wiki</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWiki()
   * @generated
   * @ordered
   */
  protected String wiki = WIKI_EDEFAULT;

  /**
   * The default value of the '{@link #getEnvironment() <em>Environment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnvironment()
   * @generated
   * @ordered
   */
  protected static final String ENVIRONMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEnvironment() <em>Environment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnvironment()
   * @generated
   * @ordered
   */
  protected String environment = ENVIRONMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getBoxpath() <em>Boxpath</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoxpath()
   * @generated
   * @ordered
   */
  protected static final String BOXPATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBoxpath() <em>Boxpath</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoxpath()
   * @generated
   * @ordered
   */
  protected String boxpath = BOXPATH_EDEFAULT;

  /**
   * The default value of the '{@link #getComponent() <em>Component</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponent()
   * @generated
   * @ordered
   */
  protected static final String COMPONENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComponent() <em>Component</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponent()
   * @generated
   * @ordered
   */
  protected String component = COMPONENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected EList<BoxLocation> location;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentDevelopmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DependencyPackage.Literals.COMPONENT_DEVELOPMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.COMPONENT_DEVELOPMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWiki()
  {
    return wiki;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWiki(String newWiki)
  {
    String oldWiki = wiki;
    wiki = newWiki;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.COMPONENT_DEVELOPMENT__WIKI, oldWiki, wiki));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEnvironment()
  {
    return environment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnvironment(String newEnvironment)
  {
    String oldEnvironment = environment;
    environment = newEnvironment;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.COMPONENT_DEVELOPMENT__ENVIRONMENT, oldEnvironment, environment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBoxpath()
  {
    return boxpath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBoxpath(String newBoxpath)
  {
    String oldBoxpath = boxpath;
    boxpath = newBoxpath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.COMPONENT_DEVELOPMENT__BOXPATH, oldBoxpath, boxpath));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getComponent()
  {
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComponent(String newComponent)
  {
    String oldComponent = component;
    component = newComponent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.COMPONENT_DEVELOPMENT__COMPONENT, oldComponent, component));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<BoxLocation> getLocation()
  {
    if (location == null)
    {
      location = new EObjectContainmentEList<BoxLocation>(BoxLocation.class, this, DependencyPackage.COMPONENT_DEVELOPMENT__LOCATION);
    }
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DependencyPackage.COMPONENT_DEVELOPMENT__LOCATION:
        return ((InternalEList<?>)getLocation()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DependencyPackage.COMPONENT_DEVELOPMENT__NAME:
        return getName();
      case DependencyPackage.COMPONENT_DEVELOPMENT__WIKI:
        return getWiki();
      case DependencyPackage.COMPONENT_DEVELOPMENT__ENVIRONMENT:
        return getEnvironment();
      case DependencyPackage.COMPONENT_DEVELOPMENT__BOXPATH:
        return getBoxpath();
      case DependencyPackage.COMPONENT_DEVELOPMENT__COMPONENT:
        return getComponent();
      case DependencyPackage.COMPONENT_DEVELOPMENT__LOCATION:
        return getLocation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DependencyPackage.COMPONENT_DEVELOPMENT__NAME:
        setName((String)newValue);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__WIKI:
        setWiki((String)newValue);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__ENVIRONMENT:
        setEnvironment((String)newValue);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__BOXPATH:
        setBoxpath((String)newValue);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__COMPONENT:
        setComponent((String)newValue);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__LOCATION:
        getLocation().clear();
        getLocation().addAll((Collection<? extends BoxLocation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.COMPONENT_DEVELOPMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__WIKI:
        setWiki(WIKI_EDEFAULT);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__ENVIRONMENT:
        setEnvironment(ENVIRONMENT_EDEFAULT);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__BOXPATH:
        setBoxpath(BOXPATH_EDEFAULT);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__COMPONENT:
        setComponent(COMPONENT_EDEFAULT);
        return;
      case DependencyPackage.COMPONENT_DEVELOPMENT__LOCATION:
        getLocation().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.COMPONENT_DEVELOPMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DependencyPackage.COMPONENT_DEVELOPMENT__WIKI:
        return WIKI_EDEFAULT == null ? wiki != null : !WIKI_EDEFAULT.equals(wiki);
      case DependencyPackage.COMPONENT_DEVELOPMENT__ENVIRONMENT:
        return ENVIRONMENT_EDEFAULT == null ? environment != null : !ENVIRONMENT_EDEFAULT.equals(environment);
      case DependencyPackage.COMPONENT_DEVELOPMENT__BOXPATH:
        return BOXPATH_EDEFAULT == null ? boxpath != null : !BOXPATH_EDEFAULT.equals(boxpath);
      case DependencyPackage.COMPONENT_DEVELOPMENT__COMPONENT:
        return COMPONENT_EDEFAULT == null ? component != null : !COMPONENT_EDEFAULT.equals(component);
      case DependencyPackage.COMPONENT_DEVELOPMENT__LOCATION:
        return location != null && !location.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", wiki: ");
    result.append(wiki);
    result.append(", environment: ");
    result.append(environment);
    result.append(", boxpath: ");
    result.append(boxpath);
    result.append(", component: ");
    result.append(component);
    result.append(')');
    return result.toString();
  }

} //ComponentDevelopmentImpl
