/**
 * generated by Xtext 2.21.0
 */
package org.xtext.base.dependency.dependency.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.base.dependency.dependency.BoxLocation;
import org.xtext.base.dependency.dependency.DependencyPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Box Location</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.BoxLocationImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.BoxLocationImpl#getImportflag <em>Importflag</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.BoxLocationImpl#getBuildflag <em>Buildflag</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.BoxLocationImpl#getLaunchflag <em>Launchflag</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.BoxLocationImpl#getDetachflag <em>Detachflag</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BoxLocationImpl extends MinimalEObjectImpl.Container implements BoxLocation
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getImportflag() <em>Importflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportflag()
   * @generated
   * @ordered
   */
  protected static final String IMPORTFLAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImportflag() <em>Importflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportflag()
   * @generated
   * @ordered
   */
  protected String importflag = IMPORTFLAG_EDEFAULT;

  /**
   * The default value of the '{@link #getBuildflag() <em>Buildflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBuildflag()
   * @generated
   * @ordered
   */
  protected static final String BUILDFLAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBuildflag() <em>Buildflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBuildflag()
   * @generated
   * @ordered
   */
  protected String buildflag = BUILDFLAG_EDEFAULT;

  /**
   * The default value of the '{@link #getLaunchflag() <em>Launchflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLaunchflag()
   * @generated
   * @ordered
   */
  protected static final String LAUNCHFLAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLaunchflag() <em>Launchflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLaunchflag()
   * @generated
   * @ordered
   */
  protected String launchflag = LAUNCHFLAG_EDEFAULT;

  /**
   * The default value of the '{@link #getDetachflag() <em>Detachflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDetachflag()
   * @generated
   * @ordered
   */
  protected static final String DETACHFLAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDetachflag() <em>Detachflag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDetachflag()
   * @generated
   * @ordered
   */
  protected String detachflag = DETACHFLAG_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BoxLocationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DependencyPackage.Literals.BOX_LOCATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.BOX_LOCATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getImportflag()
  {
    return importflag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImportflag(String newImportflag)
  {
    String oldImportflag = importflag;
    importflag = newImportflag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.BOX_LOCATION__IMPORTFLAG, oldImportflag, importflag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBuildflag()
  {
    return buildflag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBuildflag(String newBuildflag)
  {
    String oldBuildflag = buildflag;
    buildflag = newBuildflag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.BOX_LOCATION__BUILDFLAG, oldBuildflag, buildflag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLaunchflag()
  {
    return launchflag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLaunchflag(String newLaunchflag)
  {
    String oldLaunchflag = launchflag;
    launchflag = newLaunchflag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.BOX_LOCATION__LAUNCHFLAG, oldLaunchflag, launchflag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDetachflag()
  {
    return detachflag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDetachflag(String newDetachflag)
  {
    String oldDetachflag = detachflag;
    detachflag = newDetachflag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.BOX_LOCATION__DETACHFLAG, oldDetachflag, detachflag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DependencyPackage.BOX_LOCATION__NAME:
        return getName();
      case DependencyPackage.BOX_LOCATION__IMPORTFLAG:
        return getImportflag();
      case DependencyPackage.BOX_LOCATION__BUILDFLAG:
        return getBuildflag();
      case DependencyPackage.BOX_LOCATION__LAUNCHFLAG:
        return getLaunchflag();
      case DependencyPackage.BOX_LOCATION__DETACHFLAG:
        return getDetachflag();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DependencyPackage.BOX_LOCATION__NAME:
        setName((String)newValue);
        return;
      case DependencyPackage.BOX_LOCATION__IMPORTFLAG:
        setImportflag((String)newValue);
        return;
      case DependencyPackage.BOX_LOCATION__BUILDFLAG:
        setBuildflag((String)newValue);
        return;
      case DependencyPackage.BOX_LOCATION__LAUNCHFLAG:
        setLaunchflag((String)newValue);
        return;
      case DependencyPackage.BOX_LOCATION__DETACHFLAG:
        setDetachflag((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.BOX_LOCATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DependencyPackage.BOX_LOCATION__IMPORTFLAG:
        setImportflag(IMPORTFLAG_EDEFAULT);
        return;
      case DependencyPackage.BOX_LOCATION__BUILDFLAG:
        setBuildflag(BUILDFLAG_EDEFAULT);
        return;
      case DependencyPackage.BOX_LOCATION__LAUNCHFLAG:
        setLaunchflag(LAUNCHFLAG_EDEFAULT);
        return;
      case DependencyPackage.BOX_LOCATION__DETACHFLAG:
        setDetachflag(DETACHFLAG_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.BOX_LOCATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DependencyPackage.BOX_LOCATION__IMPORTFLAG:
        return IMPORTFLAG_EDEFAULT == null ? importflag != null : !IMPORTFLAG_EDEFAULT.equals(importflag);
      case DependencyPackage.BOX_LOCATION__BUILDFLAG:
        return BUILDFLAG_EDEFAULT == null ? buildflag != null : !BUILDFLAG_EDEFAULT.equals(buildflag);
      case DependencyPackage.BOX_LOCATION__LAUNCHFLAG:
        return LAUNCHFLAG_EDEFAULT == null ? launchflag != null : !LAUNCHFLAG_EDEFAULT.equals(launchflag);
      case DependencyPackage.BOX_LOCATION__DETACHFLAG:
        return DETACHFLAG_EDEFAULT == null ? detachflag != null : !DETACHFLAG_EDEFAULT.equals(detachflag);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", importflag: ");
    result.append(importflag);
    result.append(", buildflag: ");
    result.append(buildflag);
    result.append(", launchflag: ");
    result.append(launchflag);
    result.append(", detachflag: ");
    result.append(detachflag);
    result.append(')');
    return result.toString();
  }

} //BoxLocationImpl
