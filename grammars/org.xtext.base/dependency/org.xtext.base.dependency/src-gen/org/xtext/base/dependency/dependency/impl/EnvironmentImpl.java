/**
 * generated by Xtext 2.21.0
 */
package org.xtext.base.dependency.dependency.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.base.dependency.dependency.At;
import org.xtext.base.dependency.dependency.DependencyComponent;
import org.xtext.base.dependency.dependency.DependencyConnectors;
import org.xtext.base.dependency.dependency.DependencyObject;
import org.xtext.base.dependency.dependency.DependencyPackage;
import org.xtext.base.dependency.dependency.Environment;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Environment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.EnvironmentImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.EnvironmentImpl#getWiki <em>Wiki</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.EnvironmentImpl#getObjects <em>Objects</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.EnvironmentImpl#getComponents <em>Components</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.EnvironmentImpl#getConnectors <em>Connectors</em>}</li>
 *   <li>{@link org.xtext.base.dependency.dependency.impl.EnvironmentImpl#getLocation <em>Location</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EnvironmentImpl extends MinimalEObjectImpl.Container implements Environment
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getWiki() <em>Wiki</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWiki()
   * @generated
   * @ordered
   */
  protected static final String WIKI_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWiki() <em>Wiki</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWiki()
   * @generated
   * @ordered
   */
  protected String wiki = WIKI_EDEFAULT;

  /**
   * The cached value of the '{@link #getObjects() <em>Objects</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjects()
   * @generated
   * @ordered
   */
  protected EList<DependencyObject> objects;

  /**
   * The cached value of the '{@link #getComponents() <em>Components</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponents()
   * @generated
   * @ordered
   */
  protected EList<DependencyComponent> components;

  /**
   * The cached value of the '{@link #getConnectors() <em>Connectors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnectors()
   * @generated
   * @ordered
   */
  protected EList<DependencyConnectors> connectors;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected EList<At> location;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnvironmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DependencyPackage.Literals.ENVIRONMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.ENVIRONMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWiki()
  {
    return wiki;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWiki(String newWiki)
  {
    String oldWiki = wiki;
    wiki = newWiki;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.ENVIRONMENT__WIKI, oldWiki, wiki));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DependencyObject> getObjects()
  {
    if (objects == null)
    {
      objects = new EObjectContainmentEList<DependencyObject>(DependencyObject.class, this, DependencyPackage.ENVIRONMENT__OBJECTS);
    }
    return objects;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DependencyComponent> getComponents()
  {
    if (components == null)
    {
      components = new EObjectContainmentEList<DependencyComponent>(DependencyComponent.class, this, DependencyPackage.ENVIRONMENT__COMPONENTS);
    }
    return components;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DependencyConnectors> getConnectors()
  {
    if (connectors == null)
    {
      connectors = new EObjectContainmentEList<DependencyConnectors>(DependencyConnectors.class, this, DependencyPackage.ENVIRONMENT__CONNECTORS);
    }
    return connectors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<At> getLocation()
  {
    if (location == null)
    {
      location = new EObjectContainmentEList<At>(At.class, this, DependencyPackage.ENVIRONMENT__LOCATION);
    }
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DependencyPackage.ENVIRONMENT__OBJECTS:
        return ((InternalEList<?>)getObjects()).basicRemove(otherEnd, msgs);
      case DependencyPackage.ENVIRONMENT__COMPONENTS:
        return ((InternalEList<?>)getComponents()).basicRemove(otherEnd, msgs);
      case DependencyPackage.ENVIRONMENT__CONNECTORS:
        return ((InternalEList<?>)getConnectors()).basicRemove(otherEnd, msgs);
      case DependencyPackage.ENVIRONMENT__LOCATION:
        return ((InternalEList<?>)getLocation()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DependencyPackage.ENVIRONMENT__NAME:
        return getName();
      case DependencyPackage.ENVIRONMENT__WIKI:
        return getWiki();
      case DependencyPackage.ENVIRONMENT__OBJECTS:
        return getObjects();
      case DependencyPackage.ENVIRONMENT__COMPONENTS:
        return getComponents();
      case DependencyPackage.ENVIRONMENT__CONNECTORS:
        return getConnectors();
      case DependencyPackage.ENVIRONMENT__LOCATION:
        return getLocation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DependencyPackage.ENVIRONMENT__NAME:
        setName((String)newValue);
        return;
      case DependencyPackage.ENVIRONMENT__WIKI:
        setWiki((String)newValue);
        return;
      case DependencyPackage.ENVIRONMENT__OBJECTS:
        getObjects().clear();
        getObjects().addAll((Collection<? extends DependencyObject>)newValue);
        return;
      case DependencyPackage.ENVIRONMENT__COMPONENTS:
        getComponents().clear();
        getComponents().addAll((Collection<? extends DependencyComponent>)newValue);
        return;
      case DependencyPackage.ENVIRONMENT__CONNECTORS:
        getConnectors().clear();
        getConnectors().addAll((Collection<? extends DependencyConnectors>)newValue);
        return;
      case DependencyPackage.ENVIRONMENT__LOCATION:
        getLocation().clear();
        getLocation().addAll((Collection<? extends At>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.ENVIRONMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DependencyPackage.ENVIRONMENT__WIKI:
        setWiki(WIKI_EDEFAULT);
        return;
      case DependencyPackage.ENVIRONMENT__OBJECTS:
        getObjects().clear();
        return;
      case DependencyPackage.ENVIRONMENT__COMPONENTS:
        getComponents().clear();
        return;
      case DependencyPackage.ENVIRONMENT__CONNECTORS:
        getConnectors().clear();
        return;
      case DependencyPackage.ENVIRONMENT__LOCATION:
        getLocation().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.ENVIRONMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DependencyPackage.ENVIRONMENT__WIKI:
        return WIKI_EDEFAULT == null ? wiki != null : !WIKI_EDEFAULT.equals(wiki);
      case DependencyPackage.ENVIRONMENT__OBJECTS:
        return objects != null && !objects.isEmpty();
      case DependencyPackage.ENVIRONMENT__COMPONENTS:
        return components != null && !components.isEmpty();
      case DependencyPackage.ENVIRONMENT__CONNECTORS:
        return connectors != null && !connectors.isEmpty();
      case DependencyPackage.ENVIRONMENT__LOCATION:
        return location != null && !location.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", wiki: ");
    result.append(wiki);
    result.append(')');
    return result.toString();
  }

} //EnvironmentImpl
