/*
 * generated by Xtext 2.21.0
 */
package org.xtext.base.dependency.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DependencyGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cUsernameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cUsernameUserNameParserRuleCall_0_0 = (RuleCall)cUsernameAssignment_0.eContents().get(0);
		private final Assignment cUserimportAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUserimportUserImportParserRuleCall_1_0 = (RuleCall)cUserimportAssignment_1.eContents().get(0);
		private final Assignment cNewAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewNewParserRuleCall_2_0 = (RuleCall)cNewAssignment_2.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_3_0 = (RuleCall)cEnvironmentsAssignment_3.eContents().get(0);
		private final Assignment cSystemProjectsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSystemProjectsSystemProjectParserRuleCall_4_0 = (RuleCall)cSystemProjectsAssignment_4.eContents().get(0);
		private final Assignment cComponentDevelopmentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComponentDevelopmentsComponentDevelopmentParserRuleCall_5_0 = (RuleCall)cComponentDevelopmentsAssignment_5.eContents().get(0);
		
		//Model:
		//	username+=UserName?
		//	userimport+=UserImport?
		//	new+=New*
		//	environments+=Environment*
		//	systemProjects+=SystemProject*
		//	componentDevelopments+=ComponentDevelopment*;
		@Override public ParserRule getRule() { return rule; }
		
		//username+=UserName? userimport+=UserImport? new+=New* environments+=Environment* systemProjects+=SystemProject*
		//componentDevelopments+=ComponentDevelopment*
		public Group getGroup() { return cGroup; }
		
		//username+=UserName?
		public Assignment getUsernameAssignment_0() { return cUsernameAssignment_0; }
		
		//UserName
		public RuleCall getUsernameUserNameParserRuleCall_0_0() { return cUsernameUserNameParserRuleCall_0_0; }
		
		//userimport+=UserImport?
		public Assignment getUserimportAssignment_1() { return cUserimportAssignment_1; }
		
		//UserImport
		public RuleCall getUserimportUserImportParserRuleCall_1_0() { return cUserimportUserImportParserRuleCall_1_0; }
		
		//new+=New*
		public Assignment getNewAssignment_2() { return cNewAssignment_2; }
		
		//New
		public RuleCall getNewNewParserRuleCall_2_0() { return cNewNewParserRuleCall_2_0; }
		
		//environments+=Environment*
		public Assignment getEnvironmentsAssignment_3() { return cEnvironmentsAssignment_3; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_3_0() { return cEnvironmentsEnvironmentParserRuleCall_3_0; }
		
		//systemProjects+=SystemProject*
		public Assignment getSystemProjectsAssignment_4() { return cSystemProjectsAssignment_4; }
		
		//SystemProject
		public RuleCall getSystemProjectsSystemProjectParserRuleCall_4_0() { return cSystemProjectsSystemProjectParserRuleCall_4_0; }
		
		//componentDevelopments+=ComponentDevelopment*
		public Assignment getComponentDevelopmentsAssignment_5() { return cComponentDevelopmentsAssignment_5; }
		
		//ComponentDevelopment
		public RuleCall getComponentDevelopmentsComponentDevelopmentParserRuleCall_5_0() { return cComponentDevelopmentsComponentDevelopmentParserRuleCall_5_0; }
	}
	public class NewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.New");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameNewKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cObjectDependencyObjectParserRuleCall_1_0 = (RuleCall)cObjectAssignment_1.eContents().get(0);
		private final Assignment cComponentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cComponentDependencyComponentParserRuleCall_2_0 = (RuleCall)cComponentAssignment_2.eContents().get(0);
		private final Assignment cConnectorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConnectorDependencyConnectorsParserRuleCall_3_0 = (RuleCall)cConnectorAssignment_3.eContents().get(0);
		private final Assignment cLocationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLocationAtParserRuleCall_4_0 = (RuleCall)cLocationAssignment_4.eContents().get(0);
		
		//// New ++
		//New:
		//	name="new"
		//	object+=DependencyObject?
		//	component+=DependencyComponent?
		//	connector+=DependencyConnectors?
		//	location=At;
		@Override public ParserRule getRule() { return rule; }
		
		//name="new" object+=DependencyObject? component+=DependencyComponent? connector+=DependencyConnectors? location=At
		public Group getGroup() { return cGroup; }
		
		//name="new"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//"new"
		public Keyword getNameNewKeyword_0_0() { return cNameNewKeyword_0_0; }
		
		//object+=DependencyObject?
		public Assignment getObjectAssignment_1() { return cObjectAssignment_1; }
		
		//DependencyObject
		public RuleCall getObjectDependencyObjectParserRuleCall_1_0() { return cObjectDependencyObjectParserRuleCall_1_0; }
		
		//component+=DependencyComponent?
		public Assignment getComponentAssignment_2() { return cComponentAssignment_2; }
		
		//DependencyComponent
		public RuleCall getComponentDependencyComponentParserRuleCall_2_0() { return cComponentDependencyComponentParserRuleCall_2_0; }
		
		//connector+=DependencyConnectors?
		public Assignment getConnectorAssignment_3() { return cConnectorAssignment_3; }
		
		//DependencyConnectors
		public RuleCall getConnectorDependencyConnectorsParserRuleCall_3_0() { return cConnectorDependencyConnectorsParserRuleCall_3_0; }
		
		//location=At
		public Assignment getLocationAssignment_4() { return cLocationAssignment_4; }
		
		//At
		public RuleCall getLocationAtParserRuleCall_4_0() { return cLocationAtParserRuleCall_4_0; }
	}
	public class AtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.At");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//At:
		//	'@' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class UserNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.UserName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//UserName:
		//	'UserName' ':' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'UserName' ':' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'UserName'
		public Keyword getUserNameKeyword_0() { return cUserNameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
	}
	public class UserImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.UserImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnvironmentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEnvironmentSTRINGTerminalRuleCall_1_0 = (RuleCall)cEnvironmentAssignment_1.eContents().get(0);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBoxpathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBoxpathSTRINGTerminalRuleCall_3_0 = (RuleCall)cBoxpathAssignment_3.eContents().get(0);
		
		//UserImport:
		//	'import' environment=STRING 'from' boxpath=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' environment=STRING 'from' boxpath=STRING
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//environment=STRING
		public Assignment getEnvironmentAssignment_1() { return cEnvironmentAssignment_1; }
		
		//STRING
		public RuleCall getEnvironmentSTRINGTerminalRuleCall_1_0() { return cEnvironmentSTRINGTerminalRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//boxpath=STRING
		public Assignment getBoxpathAssignment_3() { return cBoxpathAssignment_3; }
		
		//STRING
		public RuleCall getBoxpathSTRINGTerminalRuleCall_3_0() { return cBoxpathSTRINGTerminalRuleCall_3_0; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvironmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWikiKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cWikiAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cWikiSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cWikiAssignment_2_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cObjectsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cObjectsDependencyObjectParserRuleCall_4_0 = (RuleCall)cObjectsAssignment_4.eContents().get(0);
		private final Assignment cComponentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComponentsDependencyComponentParserRuleCall_5_0 = (RuleCall)cComponentsAssignment_5.eContents().get(0);
		private final Assignment cConnectorsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConnectorsDependencyConnectorsParserRuleCall_6_0 = (RuleCall)cConnectorsAssignment_6.eContents().get(0);
		private final Assignment cLocationAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLocationAtParserRuleCall_7_0 = (RuleCall)cLocationAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//// Environment ++
		//Environment:
		//	'Environment' name=ID ('Wiki' ':' wiki=STRING)?
		//	'{'
		//	objects+=DependencyObject*
		//	components+=DependencyComponent*
		//	connectors+=DependencyConnectors*
		//	location+=At+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Environment' name=ID ('Wiki' ':' wiki=STRING)? '{' objects+=DependencyObject* components+=DependencyComponent*
		//connectors+=DependencyConnectors* location+=At+ '}'
		public Group getGroup() { return cGroup; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_0() { return cEnvironmentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('Wiki' ':' wiki=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Wiki'
		public Keyword getWikiKeyword_2_0() { return cWikiKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//wiki=STRING
		public Assignment getWikiAssignment_2_2() { return cWikiAssignment_2_2; }
		
		//STRING
		public RuleCall getWikiSTRINGTerminalRuleCall_2_2_0() { return cWikiSTRINGTerminalRuleCall_2_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//objects+=DependencyObject*
		public Assignment getObjectsAssignment_4() { return cObjectsAssignment_4; }
		
		//DependencyObject
		public RuleCall getObjectsDependencyObjectParserRuleCall_4_0() { return cObjectsDependencyObjectParserRuleCall_4_0; }
		
		//components+=DependencyComponent*
		public Assignment getComponentsAssignment_5() { return cComponentsAssignment_5; }
		
		//DependencyComponent
		public RuleCall getComponentsDependencyComponentParserRuleCall_5_0() { return cComponentsDependencyComponentParserRuleCall_5_0; }
		
		//connectors+=DependencyConnectors*
		public Assignment getConnectorsAssignment_6() { return cConnectorsAssignment_6; }
		
		//DependencyConnectors
		public RuleCall getConnectorsDependencyConnectorsParserRuleCall_6_0() { return cConnectorsDependencyConnectorsParserRuleCall_6_0; }
		
		//location+=At+
		public Assignment getLocationAssignment_7() { return cLocationAssignment_7; }
		
		//At
		public RuleCall getLocationAtParserRuleCall_7_0() { return cLocationAtParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class DependencyObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.DependencyObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIsMultiKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cIsMultiAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cIsMultiSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cIsMultiAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWikiKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cWikiAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cWikiSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cWikiAssignment_3_2.eContents().get(0);
		
		//DependencyObject:
		//	'Object' name=STRING ('isMulti' ':' isMulti=STRING)? ('Wiki' ':' wiki=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Object' name=STRING ('isMulti' ':' isMulti=STRING)? ('Wiki' ':' wiki=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'Object'
		public Keyword getObjectKeyword_0() { return cObjectKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//('isMulti' ':' isMulti=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'isMulti'
		public Keyword getIsMultiKeyword_2_0() { return cIsMultiKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//isMulti=STRING
		public Assignment getIsMultiAssignment_2_2() { return cIsMultiAssignment_2_2; }
		
		//STRING
		public RuleCall getIsMultiSTRINGTerminalRuleCall_2_2_0() { return cIsMultiSTRINGTerminalRuleCall_2_2_0; }
		
		//('Wiki' ':' wiki=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Wiki'
		public Keyword getWikiKeyword_3_0() { return cWikiKeyword_3_0; }
		
		//':'
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }
		
		//wiki=STRING
		public Assignment getWikiAssignment_3_2() { return cWikiAssignment_3_2; }
		
		//STRING
		public RuleCall getWikiSTRINGTerminalRuleCall_3_2_0() { return cWikiSTRINGTerminalRuleCall_3_2_0; }
	}
	public class DependencyComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.DependencyComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInputPortsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cInputPortsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cInputPortsDependencyPortParserRuleCall_3_2_0 = (RuleCall)cInputPortsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cInputPortsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cInputPortsDependencyPortParserRuleCall_3_3_1_0 = (RuleCall)cInputPortsAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOutputPortsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOutputPortsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cOutputPortsDependencyPortParserRuleCall_4_2_0 = (RuleCall)cOutputPortsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cOutputPortsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cOutputPortsDependencyPortParserRuleCall_4_3_1_0 = (RuleCall)cOutputPortsAssignment_4_3_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWikiKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cWikiAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cWikiSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cWikiAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DependencyComponent:
		//	'Component' name=STRING
		//	'{' ('InputPorts' ':' inputPorts+=DependencyPort (',' inputPorts+=DependencyPort)*)? ('OutputPorts' ':'
		//	outputPorts+=DependencyPort (',' outputPorts+=DependencyPort)*)? ('Wiki' ':' wiki=STRING)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Component' name=STRING '{' ('InputPorts' ':' inputPorts+=DependencyPort (',' inputPorts+=DependencyPort)*)?
		//('OutputPorts' ':' outputPorts+=DependencyPort (',' outputPorts+=DependencyPort)*)? ('Wiki' ':' wiki=STRING)? '}'
		public Group getGroup() { return cGroup; }
		
		//'Component'
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('InputPorts' ':' inputPorts+=DependencyPort (',' inputPorts+=DependencyPort)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'InputPorts'
		public Keyword getInputPortsKeyword_3_0() { return cInputPortsKeyword_3_0; }
		
		//':'
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }
		
		//inputPorts+=DependencyPort
		public Assignment getInputPortsAssignment_3_2() { return cInputPortsAssignment_3_2; }
		
		//DependencyPort
		public RuleCall getInputPortsDependencyPortParserRuleCall_3_2_0() { return cInputPortsDependencyPortParserRuleCall_3_2_0; }
		
		//(',' inputPorts+=DependencyPort)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//inputPorts+=DependencyPort
		public Assignment getInputPortsAssignment_3_3_1() { return cInputPortsAssignment_3_3_1; }
		
		//DependencyPort
		public RuleCall getInputPortsDependencyPortParserRuleCall_3_3_1_0() { return cInputPortsDependencyPortParserRuleCall_3_3_1_0; }
		
		//('OutputPorts' ':' outputPorts+=DependencyPort (',' outputPorts+=DependencyPort)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'OutputPorts'
		public Keyword getOutputPortsKeyword_4_0() { return cOutputPortsKeyword_4_0; }
		
		//':'
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }
		
		//outputPorts+=DependencyPort
		public Assignment getOutputPortsAssignment_4_2() { return cOutputPortsAssignment_4_2; }
		
		//DependencyPort
		public RuleCall getOutputPortsDependencyPortParserRuleCall_4_2_0() { return cOutputPortsDependencyPortParserRuleCall_4_2_0; }
		
		//(',' outputPorts+=DependencyPort)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//','
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//outputPorts+=DependencyPort
		public Assignment getOutputPortsAssignment_4_3_1() { return cOutputPortsAssignment_4_3_1; }
		
		//DependencyPort
		public RuleCall getOutputPortsDependencyPortParserRuleCall_4_3_1_0() { return cOutputPortsDependencyPortParserRuleCall_4_3_1_0; }
		
		//('Wiki' ':' wiki=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Wiki'
		public Keyword getWikiKeyword_5_0() { return cWikiKeyword_5_0; }
		
		//':'
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }
		
		//wiki=STRING
		public Assignment getWikiAssignment_5_2() { return cWikiAssignment_5_2; }
		
		//STRING
		public RuleCall getWikiSTRINGTerminalRuleCall_5_2_0() { return cWikiSTRINGTerminalRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DependencyPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.DependencyPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjinstancesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cObjinstancesSTRINGTerminalRuleCall_2_0 = (RuleCall)cObjinstancesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cObjinstancesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cObjinstancesSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cObjinstancesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DependencyPort:
		//	name=STRING
		//	'[' objinstances+=STRING (',' objinstances+=STRING)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING '[' objinstances+=STRING (',' objinstances+=STRING)* ']'
		public Group getGroup() { return cGroup; }
		
		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//objinstances+=STRING
		public Assignment getObjinstancesAssignment_2() { return cObjinstancesAssignment_2; }
		
		//STRING
		public RuleCall getObjinstancesSTRINGTerminalRuleCall_2_0() { return cObjinstancesSTRINGTerminalRuleCall_2_0; }
		
		//(',' objinstances+=STRING)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//objinstances+=STRING
		public Assignment getObjinstancesAssignment_3_1() { return cObjinstancesAssignment_3_1; }
		
		//STRING
		public RuleCall getObjinstancesSTRINGTerminalRuleCall_3_1_0() { return cObjinstancesSTRINGTerminalRuleCall_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class DependencyConnectorsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.DependencyConnectors");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjinstancesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjinstancesSTRINGTerminalRuleCall_3_0 = (RuleCall)cObjinstancesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cObjinstancesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cObjinstancesSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cObjinstancesAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DependencyConnectors:
		//	'Connector' name=STRING
		//	'[' objinstances+=STRING (',' objinstances+=STRING)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'Connector' name=STRING '[' objinstances+=STRING (',' objinstances+=STRING)* ']'
		public Group getGroup() { return cGroup; }
		
		//'Connector'
		public Keyword getConnectorKeyword_0() { return cConnectorKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//objinstances+=STRING
		public Assignment getObjinstancesAssignment_3() { return cObjinstancesAssignment_3; }
		
		//STRING
		public RuleCall getObjinstancesSTRINGTerminalRuleCall_3_0() { return cObjinstancesSTRINGTerminalRuleCall_3_0; }
		
		//(',' objinstances+=STRING)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//objinstances+=STRING
		public Assignment getObjinstancesAssignment_4_1() { return cObjinstancesAssignment_4_1; }
		
		//STRING
		public RuleCall getObjinstancesSTRINGTerminalRuleCall_4_1_0() { return cObjinstancesSTRINGTerminalRuleCall_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class SystemProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.SystemProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWikiKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cWikiAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cWikiSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cWikiAssignment_2_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cImportKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEnvironmentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEnvironmentSTRINGTerminalRuleCall_5_0 = (RuleCall)cEnvironmentAssignment_5.eContents().get(0);
		private final Keyword cFromKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBoxpathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cBoxpathSTRINGTerminalRuleCall_7_0 = (RuleCall)cBoxpathAssignment_7.eContents().get(0);
		private final Assignment cCimsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCimsCIMParserRuleCall_8_0 = (RuleCall)cCimsAssignment_8.eContents().get(0);
		private final Assignment cDependenciesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDependenciesDependencyParserRuleCall_9_0 = (RuleCall)cDependenciesAssignment_9.eContents().get(0);
		private final Assignment cGuiAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cGuiGUIParserRuleCall_10_0 = (RuleCall)cGuiAssignment_10.eContents().get(0);
		private final Assignment cLocationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cLocationBoxLocationParserRuleCall_11_0 = (RuleCall)cLocationAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//// System Project ++
		//SystemProject:
		//	'SystemProject' name=ID ('Wiki' ':' wiki=STRING)?
		//	'{'
		//	'import' environment=STRING 'from' boxpath=STRING
		//	cims+=CIM*
		//	dependencies+=Dependency*
		//	gui+=GUI*
		//	location+=BoxLocation+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SystemProject' name=ID ('Wiki' ':' wiki=STRING)? '{' 'import' environment=STRING 'from' boxpath=STRING cims+=CIM*
		//dependencies+=Dependency* gui+=GUI* location+=BoxLocation+ '}'
		public Group getGroup() { return cGroup; }
		
		//'SystemProject'
		public Keyword getSystemProjectKeyword_0() { return cSystemProjectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('Wiki' ':' wiki=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Wiki'
		public Keyword getWikiKeyword_2_0() { return cWikiKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//wiki=STRING
		public Assignment getWikiAssignment_2_2() { return cWikiAssignment_2_2; }
		
		//STRING
		public RuleCall getWikiSTRINGTerminalRuleCall_2_2_0() { return cWikiSTRINGTerminalRuleCall_2_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'import'
		public Keyword getImportKeyword_4() { return cImportKeyword_4; }
		
		//environment=STRING
		public Assignment getEnvironmentAssignment_5() { return cEnvironmentAssignment_5; }
		
		//STRING
		public RuleCall getEnvironmentSTRINGTerminalRuleCall_5_0() { return cEnvironmentSTRINGTerminalRuleCall_5_0; }
		
		//'from'
		public Keyword getFromKeyword_6() { return cFromKeyword_6; }
		
		//boxpath=STRING
		public Assignment getBoxpathAssignment_7() { return cBoxpathAssignment_7; }
		
		//STRING
		public RuleCall getBoxpathSTRINGTerminalRuleCall_7_0() { return cBoxpathSTRINGTerminalRuleCall_7_0; }
		
		//cims+=CIM*
		public Assignment getCimsAssignment_8() { return cCimsAssignment_8; }
		
		//CIM
		public RuleCall getCimsCIMParserRuleCall_8_0() { return cCimsCIMParserRuleCall_8_0; }
		
		//dependencies+=Dependency*
		public Assignment getDependenciesAssignment_9() { return cDependenciesAssignment_9; }
		
		//Dependency
		public RuleCall getDependenciesDependencyParserRuleCall_9_0() { return cDependenciesDependencyParserRuleCall_9_0; }
		
		//gui+=GUI*
		public Assignment getGuiAssignment_10() { return cGuiAssignment_10; }
		
		//GUI
		public RuleCall getGuiGUIParserRuleCall_10_0() { return cGuiGUIParserRuleCall_10_0; }
		
		//location+=BoxLocation+
		public Assignment getLocationAssignment_11() { return cLocationAssignment_11; }
		
		//BoxLocation
		public RuleCall getLocationBoxLocationParserRuleCall_11_0() { return cLocationBoxLocationParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDependencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cFnAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFnSTRINGTerminalRuleCall_2_0 = (RuleCall)cFnAssignment_2.eContents().get(0);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFpAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFpSTRINGTerminalRuleCall_4_0 = (RuleCall)cFpAssignment_4.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOSTRINGTerminalRuleCall_6_0 = (RuleCall)cOAssignment_6.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusGreaterThanSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTnAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTnSTRINGTerminalRuleCall_8_0 = (RuleCall)cTnAssignment_8.eContents().get(0);
		private final Keyword cFullStopKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTpAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTpSTRINGTerminalRuleCall_10_0 = (RuleCall)cTpAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cWikiKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cColonKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cWikiAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cWikiSTRINGTerminalRuleCall_11_2_0 = (RuleCall)cWikiAssignment_11_2.eContents().get(0);
		
		//Dependency:
		//	'Dependency' name=STRING
		//	fn=STRING '.' fp=STRING
		//	'--' o=STRING '-->'
		//	tn=STRING '.' tp=STRING ('Wiki' ':' wiki=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Dependency' name=STRING fn=STRING '.' fp=STRING '--' o=STRING '-->' tn=STRING '.' tp=STRING ('Wiki' ':' wiki=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'Dependency'
		public Keyword getDependencyKeyword_0() { return cDependencyKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//fn=STRING
		public Assignment getFnAssignment_2() { return cFnAssignment_2; }
		
		//STRING
		public RuleCall getFnSTRINGTerminalRuleCall_2_0() { return cFnSTRINGTerminalRuleCall_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//fp=STRING
		public Assignment getFpAssignment_4() { return cFpAssignment_4; }
		
		//STRING
		public RuleCall getFpSTRINGTerminalRuleCall_4_0() { return cFpSTRINGTerminalRuleCall_4_0; }
		
		//'--'
		public Keyword getHyphenMinusHyphenMinusKeyword_5() { return cHyphenMinusHyphenMinusKeyword_5; }
		
		//o=STRING
		public Assignment getOAssignment_6() { return cOAssignment_6; }
		
		//STRING
		public RuleCall getOSTRINGTerminalRuleCall_6_0() { return cOSTRINGTerminalRuleCall_6_0; }
		
		//'-->'
		public Keyword getHyphenMinusHyphenMinusGreaterThanSignKeyword_7() { return cHyphenMinusHyphenMinusGreaterThanSignKeyword_7; }
		
		//tn=STRING
		public Assignment getTnAssignment_8() { return cTnAssignment_8; }
		
		//STRING
		public RuleCall getTnSTRINGTerminalRuleCall_8_0() { return cTnSTRINGTerminalRuleCall_8_0; }
		
		//'.'
		public Keyword getFullStopKeyword_9() { return cFullStopKeyword_9; }
		
		//tp=STRING
		public Assignment getTpAssignment_10() { return cTpAssignment_10; }
		
		//STRING
		public RuleCall getTpSTRINGTerminalRuleCall_10_0() { return cTpSTRINGTerminalRuleCall_10_0; }
		
		//('Wiki' ':' wiki=STRING)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'Wiki'
		public Keyword getWikiKeyword_11_0() { return cWikiKeyword_11_0; }
		
		//':'
		public Keyword getColonKeyword_11_1() { return cColonKeyword_11_1; }
		
		//wiki=STRING
		public Assignment getWikiAssignment_11_2() { return cWikiAssignment_11_2; }
		
		//STRING
		public RuleCall getWikiSTRINGTerminalRuleCall_11_2_0() { return cWikiSTRINGTerminalRuleCall_11_2_0; }
	}
	public class GUIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.GUI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGUIKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXINTTerminalRuleCall_3_0 = (RuleCall)cXAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cYAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cYINTTerminalRuleCall_5_0 = (RuleCall)cYAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cWikiKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cColonKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cWikiAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cWikiSTRINGTerminalRuleCall_7_2_0 = (RuleCall)cWikiAssignment_7_2.eContents().get(0);
		
		//GUI:
		//	'GUI' name=STRING '(' x=INT ',' y=INT ')' ('Wiki' ':' wiki=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'GUI' name=STRING '(' x=INT ',' y=INT ')' ('Wiki' ':' wiki=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'GUI'
		public Keyword getGUIKeyword_0() { return cGUIKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//x=INT
		public Assignment getXAssignment_3() { return cXAssignment_3; }
		
		//INT
		public RuleCall getXINTTerminalRuleCall_3_0() { return cXINTTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//y=INT
		public Assignment getYAssignment_5() { return cYAssignment_5; }
		
		//INT
		public RuleCall getYINTTerminalRuleCall_5_0() { return cYINTTerminalRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//('Wiki' ':' wiki=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Wiki'
		public Keyword getWikiKeyword_7_0() { return cWikiKeyword_7_0; }
		
		//':'
		public Keyword getColonKeyword_7_1() { return cColonKeyword_7_1; }
		
		//wiki=STRING
		public Assignment getWikiAssignment_7_2() { return cWikiAssignment_7_2; }
		
		//STRING
		public RuleCall getWikiSTRINGTerminalRuleCall_7_2_0() { return cWikiSTRINGTerminalRuleCall_7_2_0; }
	}
	public class CIMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.CIM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCIMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cIsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSourceSTRINGTerminalRuleCall_3_0 = (RuleCall)cSourceAssignment_3.eContents().get(0);
		
		//CIM:
		//	'CIM' name=STRING 'is' source=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'CIM' name=STRING 'is' source=STRING
		public Group getGroup() { return cGroup; }
		
		//'CIM'
		public Keyword getCIMKeyword_0() { return cCIMKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2() { return cIsKeyword_2; }
		
		//source=STRING
		public Assignment getSourceAssignment_3() { return cSourceAssignment_3; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_3_0() { return cSourceSTRINGTerminalRuleCall_3_0; }
	}
	public class BoxLocationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.BoxLocation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoxLocationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cImportKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cImportflagAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cImportflagSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cImportflagAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBuildKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cBuildflagAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cBuildflagSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cBuildflagAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLaunchKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cLaunchflagAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cLaunchflagSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cLaunchflagAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDetachKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDetachflagAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDetachflagSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cDetachflagAssignment_5_2.eContents().get(0);
		
		//BoxLocation:
		//	'BoxLocation' name=STRING ('Import' ':' importflag=STRING)? ('Build' ':' buildflag=STRING)? ('Launch' ':'
		//	launchflag=STRING)? ('Detach' ':' detachflag=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'BoxLocation' name=STRING ('Import' ':' importflag=STRING)? ('Build' ':' buildflag=STRING)? ('Launch' ':'
		//launchflag=STRING)? ('Detach' ':' detachflag=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'BoxLocation'
		public Keyword getBoxLocationKeyword_0() { return cBoxLocationKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//('Import' ':' importflag=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Import'
		public Keyword getImportKeyword_2_0() { return cImportKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//importflag=STRING
		public Assignment getImportflagAssignment_2_2() { return cImportflagAssignment_2_2; }
		
		//STRING
		public RuleCall getImportflagSTRINGTerminalRuleCall_2_2_0() { return cImportflagSTRINGTerminalRuleCall_2_2_0; }
		
		//('Build' ':' buildflag=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Build'
		public Keyword getBuildKeyword_3_0() { return cBuildKeyword_3_0; }
		
		//':'
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }
		
		//buildflag=STRING
		public Assignment getBuildflagAssignment_3_2() { return cBuildflagAssignment_3_2; }
		
		//STRING
		public RuleCall getBuildflagSTRINGTerminalRuleCall_3_2_0() { return cBuildflagSTRINGTerminalRuleCall_3_2_0; }
		
		//('Launch' ':' launchflag=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Launch'
		public Keyword getLaunchKeyword_4_0() { return cLaunchKeyword_4_0; }
		
		//':'
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }
		
		//launchflag=STRING
		public Assignment getLaunchflagAssignment_4_2() { return cLaunchflagAssignment_4_2; }
		
		//STRING
		public RuleCall getLaunchflagSTRINGTerminalRuleCall_4_2_0() { return cLaunchflagSTRINGTerminalRuleCall_4_2_0; }
		
		//('Detach' ':' detachflag=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Detach'
		public Keyword getDetachKeyword_5_0() { return cDetachKeyword_5_0; }
		
		//':'
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }
		
		//detachflag=STRING
		public Assignment getDetachflagAssignment_5_2() { return cDetachflagAssignment_5_2; }
		
		//STRING
		public RuleCall getDetachflagSTRINGTerminalRuleCall_5_2_0() { return cDetachflagSTRINGTerminalRuleCall_5_2_0; }
	}
	public class ComponentDevelopmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.base.dependency.Dependency.ComponentDevelopment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentDevelopmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWikiKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cWikiAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cWikiSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cWikiAssignment_2_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cImportKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEnvironmentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEnvironmentSTRINGTerminalRuleCall_5_0 = (RuleCall)cEnvironmentAssignment_5.eContents().get(0);
		private final Keyword cFromKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBoxpathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cBoxpathSTRINGTerminalRuleCall_7_0 = (RuleCall)cBoxpathAssignment_7.eContents().get(0);
		private final Keyword cComponentKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cComponentAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cComponentSTRINGTerminalRuleCall_9_0 = (RuleCall)cComponentAssignment_9.eContents().get(0);
		private final Assignment cLocationAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cLocationBoxLocationParserRuleCall_10_0 = (RuleCall)cLocationAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//// Component Development ++
		//ComponentDevelopment:
		//	'ComponentDevelopment' name=ID ('Wiki' ':' wiki=STRING)?
		//	'{'
		//	'import' environment=STRING 'from' boxpath=STRING
		//	'Component' component=STRING
		//	location+=BoxLocation+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ComponentDevelopment' name=ID ('Wiki' ':' wiki=STRING)? '{' 'import' environment=STRING 'from' boxpath=STRING
		//'Component' component=STRING location+=BoxLocation+ '}'
		public Group getGroup() { return cGroup; }
		
		//'ComponentDevelopment'
		public Keyword getComponentDevelopmentKeyword_0() { return cComponentDevelopmentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('Wiki' ':' wiki=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Wiki'
		public Keyword getWikiKeyword_2_0() { return cWikiKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//wiki=STRING
		public Assignment getWikiAssignment_2_2() { return cWikiAssignment_2_2; }
		
		//STRING
		public RuleCall getWikiSTRINGTerminalRuleCall_2_2_0() { return cWikiSTRINGTerminalRuleCall_2_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'import'
		public Keyword getImportKeyword_4() { return cImportKeyword_4; }
		
		//environment=STRING
		public Assignment getEnvironmentAssignment_5() { return cEnvironmentAssignment_5; }
		
		//STRING
		public RuleCall getEnvironmentSTRINGTerminalRuleCall_5_0() { return cEnvironmentSTRINGTerminalRuleCall_5_0; }
		
		//'from'
		public Keyword getFromKeyword_6() { return cFromKeyword_6; }
		
		//boxpath=STRING
		public Assignment getBoxpathAssignment_7() { return cBoxpathAssignment_7; }
		
		//STRING
		public RuleCall getBoxpathSTRINGTerminalRuleCall_7_0() { return cBoxpathSTRINGTerminalRuleCall_7_0; }
		
		//'Component'
		public Keyword getComponentKeyword_8() { return cComponentKeyword_8; }
		
		//component=STRING
		public Assignment getComponentAssignment_9() { return cComponentAssignment_9; }
		
		//STRING
		public RuleCall getComponentSTRINGTerminalRuleCall_9_0() { return cComponentSTRINGTerminalRuleCall_9_0; }
		
		//location+=BoxLocation+
		public Assignment getLocationAssignment_10() { return cLocationAssignment_10; }
		
		//BoxLocation
		public RuleCall getLocationBoxLocationParserRuleCall_10_0() { return cLocationBoxLocationParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	
	
	private final ModelElements pModel;
	private final NewElements pNew;
	private final AtElements pAt;
	private final UserNameElements pUserName;
	private final UserImportElements pUserImport;
	private final EnvironmentElements pEnvironment;
	private final DependencyObjectElements pDependencyObject;
	private final DependencyComponentElements pDependencyComponent;
	private final DependencyPortElements pDependencyPort;
	private final DependencyConnectorsElements pDependencyConnectors;
	private final SystemProjectElements pSystemProject;
	private final DependencyElements pDependency;
	private final GUIElements pGUI;
	private final CIMElements pCIM;
	private final BoxLocationElements pBoxLocation;
	private final ComponentDevelopmentElements pComponentDevelopment;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DependencyGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pNew = new NewElements();
		this.pAt = new AtElements();
		this.pUserName = new UserNameElements();
		this.pUserImport = new UserImportElements();
		this.pEnvironment = new EnvironmentElements();
		this.pDependencyObject = new DependencyObjectElements();
		this.pDependencyComponent = new DependencyComponentElements();
		this.pDependencyPort = new DependencyPortElements();
		this.pDependencyConnectors = new DependencyConnectorsElements();
		this.pSystemProject = new SystemProjectElements();
		this.pDependency = new DependencyElements();
		this.pGUI = new GUIElements();
		this.pCIM = new CIMElements();
		this.pBoxLocation = new BoxLocationElements();
		this.pComponentDevelopment = new ComponentDevelopmentElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.base.dependency.Dependency".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	username+=UserName?
	//	userimport+=UserImport?
	//	new+=New*
	//	environments+=Environment*
	//	systemProjects+=SystemProject*
	//	componentDevelopments+=ComponentDevelopment*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//// New ++
	//New:
	//	name="new"
	//	object+=DependencyObject?
	//	component+=DependencyComponent?
	//	connector+=DependencyConnectors?
	//	location=At;
	public NewElements getNewAccess() {
		return pNew;
	}
	
	public ParserRule getNewRule() {
		return getNewAccess().getRule();
	}
	
	//At:
	//	'@' name=STRING;
	public AtElements getAtAccess() {
		return pAt;
	}
	
	public ParserRule getAtRule() {
		return getAtAccess().getRule();
	}
	
	//UserName:
	//	'UserName' ':' name=STRING;
	public UserNameElements getUserNameAccess() {
		return pUserName;
	}
	
	public ParserRule getUserNameRule() {
		return getUserNameAccess().getRule();
	}
	
	//UserImport:
	//	'import' environment=STRING 'from' boxpath=STRING;
	public UserImportElements getUserImportAccess() {
		return pUserImport;
	}
	
	public ParserRule getUserImportRule() {
		return getUserImportAccess().getRule();
	}
	
	//// Environment ++
	//Environment:
	//	'Environment' name=ID ('Wiki' ':' wiki=STRING)?
	//	'{'
	//	objects+=DependencyObject*
	//	components+=DependencyComponent*
	//	connectors+=DependencyConnectors*
	//	location+=At+
	//	'}';
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//DependencyObject:
	//	'Object' name=STRING ('isMulti' ':' isMulti=STRING)? ('Wiki' ':' wiki=STRING)?;
	public DependencyObjectElements getDependencyObjectAccess() {
		return pDependencyObject;
	}
	
	public ParserRule getDependencyObjectRule() {
		return getDependencyObjectAccess().getRule();
	}
	
	//DependencyComponent:
	//	'Component' name=STRING
	//	'{' ('InputPorts' ':' inputPorts+=DependencyPort (',' inputPorts+=DependencyPort)*)? ('OutputPorts' ':'
	//	outputPorts+=DependencyPort (',' outputPorts+=DependencyPort)*)? ('Wiki' ':' wiki=STRING)?
	//	'}';
	public DependencyComponentElements getDependencyComponentAccess() {
		return pDependencyComponent;
	}
	
	public ParserRule getDependencyComponentRule() {
		return getDependencyComponentAccess().getRule();
	}
	
	//DependencyPort:
	//	name=STRING
	//	'[' objinstances+=STRING (',' objinstances+=STRING)* ']';
	public DependencyPortElements getDependencyPortAccess() {
		return pDependencyPort;
	}
	
	public ParserRule getDependencyPortRule() {
		return getDependencyPortAccess().getRule();
	}
	
	//DependencyConnectors:
	//	'Connector' name=STRING
	//	'[' objinstances+=STRING (',' objinstances+=STRING)* ']';
	public DependencyConnectorsElements getDependencyConnectorsAccess() {
		return pDependencyConnectors;
	}
	
	public ParserRule getDependencyConnectorsRule() {
		return getDependencyConnectorsAccess().getRule();
	}
	
	//// System Project ++
	//SystemProject:
	//	'SystemProject' name=ID ('Wiki' ':' wiki=STRING)?
	//	'{'
	//	'import' environment=STRING 'from' boxpath=STRING
	//	cims+=CIM*
	//	dependencies+=Dependency*
	//	gui+=GUI*
	//	location+=BoxLocation+
	//	'}';
	public SystemProjectElements getSystemProjectAccess() {
		return pSystemProject;
	}
	
	public ParserRule getSystemProjectRule() {
		return getSystemProjectAccess().getRule();
	}
	
	//Dependency:
	//	'Dependency' name=STRING
	//	fn=STRING '.' fp=STRING
	//	'--' o=STRING '-->'
	//	tn=STRING '.' tp=STRING ('Wiki' ':' wiki=STRING)?;
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	//GUI:
	//	'GUI' name=STRING '(' x=INT ',' y=INT ')' ('Wiki' ':' wiki=STRING)?;
	public GUIElements getGUIAccess() {
		return pGUI;
	}
	
	public ParserRule getGUIRule() {
		return getGUIAccess().getRule();
	}
	
	//CIM:
	//	'CIM' name=STRING 'is' source=STRING;
	public CIMElements getCIMAccess() {
		return pCIM;
	}
	
	public ParserRule getCIMRule() {
		return getCIMAccess().getRule();
	}
	
	//BoxLocation:
	//	'BoxLocation' name=STRING ('Import' ':' importflag=STRING)? ('Build' ':' buildflag=STRING)? ('Launch' ':'
	//	launchflag=STRING)? ('Detach' ':' detachflag=STRING)?;
	public BoxLocationElements getBoxLocationAccess() {
		return pBoxLocation;
	}
	
	public ParserRule getBoxLocationRule() {
		return getBoxLocationAccess().getRule();
	}
	
	//// Component Development ++
	//ComponentDevelopment:
	//	'ComponentDevelopment' name=ID ('Wiki' ':' wiki=STRING)?
	//	'{'
	//	'import' environment=STRING 'from' boxpath=STRING
	//	'Component' component=STRING
	//	location+=BoxLocation+
	//	'}';
	public ComponentDevelopmentElements getComponentDevelopmentAccess() {
		return pComponentDevelopment;
	}
	
	public ParserRule getComponentDevelopmentRule() {
		return getComponentDevelopmentAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
